name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true
        default: "1.0.0"

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || github.ref }}
          release_name: Release ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || github.ref }}
          body: |
            ## What's New

            ### ðŸŽ¯ Accountability Features
            - Real-time monitoring of restricted apps and websites
            - Discord notifications for violations
            - Mandatory explanations for all monitoring actions
            - System tray integration with protected quit

            ### ðŸ“± Download Instructions

            **Windows Users:**
            - Download `Not-Enough-Accountability-Setup.exe` for Windows installer
            - Or download `not-enough-accountability-win32-x64.zip` for portable version

            **macOS Users:**
            - Download `Not-Enough-Accountability.dmg` for macOS installer
            - Or download `not-enough-accountability-darwin-x64.zip` for portable version

            ### ðŸ”§ First Time Setup
            1. Install and run the application
            2. Configure your Discord webhook URL (recommended)
            3. Set your work hours (default: 8 AM - 4 PM)
            4. Add restricted apps and keywords
            5. Save settings and start monitoring!

            ### ðŸ†• Auto-Update
            The app will automatically check for updates and notify you when new versions are available.

            ---

            **Full Changelog:** See the [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Update version in package.json
        if: github.event.inputs.version
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Build Windows app
        run: npm run make
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./out/make/squirrel.windows/x64/Not Enough Accountability Setup.exe
          asset_name: Not-Enough-Accountability-Setup.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows Portable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./out/make/zip/win32/x64/not-enough-accountability-win32-x64-${{ github.event.inputs.version || '1.0.0' }}.zip
          asset_name: not-enough-accountability-win32-x64.zip
          asset_content_type: application/zip

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Update version in package.json
        if: github.event.inputs.version
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Build macOS app
        run: npm run make
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./out/make/dmg/x64/Not Enough Accountability.dmg
          asset_name: Not-Enough-Accountability.dmg
          asset_content_type: application/octet-stream

      - name: Upload macOS Portable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./out/make/zip/darwin/x64/not-enough-accountability-darwin-x64-${{ github.event.inputs.version || '1.0.0' }}.zip
          asset_name: not-enough-accountability-darwin-x64.zip
          asset_content_type: application/zip
